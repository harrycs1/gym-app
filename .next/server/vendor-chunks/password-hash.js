/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/password-hash";
exports.ids = ["vendor-chunks/password-hash"];
exports.modules = {

/***/ "(rsc)/./node_modules/password-hash/lib/password-hash.js":
/*!*********************************************************!*\
  !*** ./node_modules/password-hash/lib/password-hash.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar saltChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nvar saltCharsCount = saltChars.length;\nfunction generateSalt(len) {\n    if (typeof len != \"number\" || len <= 0 || len !== parseInt(len, 10)) throw new Error(\"Invalid salt length\");\n    if (crypto.randomBytes) {\n        return crypto.randomBytes(Math.ceil(len / 2)).toString(\"hex\").substring(0, len);\n    } else {\n        for(var i = 0, salt = \"\"; i < len; i++){\n            salt += saltChars.charAt(Math.floor(Math.random() * saltCharsCount));\n        }\n        return salt;\n    }\n}\nfunction generateHash(algorithm, salt, password, iterations) {\n    iterations = iterations || 1;\n    try {\n        var hash = password;\n        for(var i = 0; i < iterations; ++i){\n            hash = crypto.createHmac(algorithm, salt).update(hash).digest(\"hex\");\n        }\n        return algorithm + \"$\" + salt + \"$\" + iterations + \"$\" + hash;\n    } catch (e) {\n        throw new Error(\"Invalid message digest algorithm\");\n    }\n}\nfunction makeBackwardCompatible(hashedPassword) {\n    var parts = hashedPassword.split(\"$\");\n    if (parts.length === 3) {\n        parts.splice(2, 0, 1);\n        hashedPassword = parts.join(\"$\");\n    }\n    return hashedPassword;\n}\nmodule.exports.generate = function(password, options) {\n    if (typeof password != \"string\") throw new Error(\"Invalid password\");\n    options || (options = {});\n    options.algorithm || (options.algorithm = \"sha1\");\n    options.saltLength || options.saltLength == 0 || (options.saltLength = 8);\n    options.iterations || (options.iterations = 1);\n    var salt = generateSalt(options.saltLength);\n    return generateHash(options.algorithm, salt, password, options.iterations);\n};\nmodule.exports.verify = function(password, hashedPassword) {\n    if (!password || !hashedPassword) return false;\n    hashedPassword = makeBackwardCompatible(hashedPassword);\n    var parts = hashedPassword.split(\"$\");\n    if (parts.length != 4) return false;\n    try {\n        return generateHash(parts[0], parts[1], password, parts[2]) == hashedPassword;\n    } catch (e) {}\n    return false;\n};\nmodule.exports.isHashed = function(password) {\n    if (!password) return false;\n    return password.split(\"$\").length == 4;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcGFzc3dvcmQtaGFzaC9saWIvcGFzc3dvcmQtaGFzaC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUVyQixJQUFJQyxZQUFZO0FBQ2hCLElBQUlDLGlCQUFpQkQsVUFBVUUsTUFBTTtBQUVyQyxTQUFTQyxhQUFhQyxHQUFHO0lBQ3ZCLElBQUksT0FBT0EsT0FBTyxZQUFZQSxPQUFPLEtBQUtBLFFBQVFDLFNBQVNELEtBQUssS0FBSyxNQUFNLElBQUlFLE1BQU07SUFDckYsSUFBSVIsT0FBT1MsV0FBVyxFQUFFO1FBQ3RCLE9BQU9ULE9BQU9TLFdBQVcsQ0FBQ0MsS0FBS0MsSUFBSSxDQUFDTCxNQUFNLElBQUlNLFFBQVEsQ0FBQyxPQUFPQyxTQUFTLENBQUMsR0FBR1A7SUFDN0UsT0FBTztRQUNMLElBQUssSUFBSVEsSUFBSSxHQUFHQyxPQUFPLElBQUlELElBQUlSLEtBQUtRLElBQUs7WUFDdkNDLFFBQVFiLFVBQVVjLE1BQU0sQ0FBQ04sS0FBS08sS0FBSyxDQUFDUCxLQUFLUSxNQUFNLEtBQUtmO1FBQ3REO1FBQ0EsT0FBT1k7SUFDVDtBQUNGO0FBRUEsU0FBU0ksYUFBYUMsU0FBUyxFQUFFTCxJQUFJLEVBQUVNLFFBQVEsRUFBRUMsVUFBVTtJQUN6REEsYUFBYUEsY0FBYztJQUMzQixJQUFJO1FBQ0YsSUFBSUMsT0FBT0Y7UUFDWCxJQUFJLElBQUlQLElBQUUsR0FBR0EsSUFBRVEsWUFBWSxFQUFFUixFQUFHO1lBQzlCUyxPQUFPdkIsT0FBT3dCLFVBQVUsQ0FBQ0osV0FBV0wsTUFBTVUsTUFBTSxDQUFDRixNQUFNRyxNQUFNLENBQUM7UUFDaEU7UUFFQSxPQUFPTixZQUFZLE1BQU1MLE9BQU8sTUFBTU8sYUFBYSxNQUFNQztJQUMzRCxFQUFFLE9BQU9JLEdBQUc7UUFDVixNQUFNLElBQUluQixNQUFNO0lBQ2xCO0FBQ0Y7QUFFQSxTQUFTb0IsdUJBQXVCQyxjQUFjO0lBQzVDLElBQUlDLFFBQVFELGVBQWVFLEtBQUssQ0FBQztJQUNqQyxJQUFHRCxNQUFNMUIsTUFBTSxLQUFLLEdBQUc7UUFDckIwQixNQUFNRSxNQUFNLENBQUMsR0FBRSxHQUFFO1FBQ2pCSCxpQkFBaUJDLE1BQU1HLElBQUksQ0FBQztJQUM5QjtJQUVBLE9BQU9KO0FBQ1Q7QUFFQUssdUJBQXVCLEdBQUcsU0FBU2IsUUFBUSxFQUFFZ0IsT0FBTztJQUNsRCxJQUFJLE9BQU9oQixZQUFZLFVBQVUsTUFBTSxJQUFJYixNQUFNO0lBQ2pENkIsV0FBWUEsQ0FBQUEsVUFBVSxDQUFDO0lBQ3ZCQSxRQUFRakIsU0FBUyxJQUFLaUIsQ0FBQUEsUUFBUWpCLFNBQVMsR0FBRyxNQUFLO0lBQy9DaUIsUUFBUUMsVUFBVSxJQUFJRCxRQUFRQyxVQUFVLElBQUksS0FBTUQsQ0FBQUEsUUFBUUMsVUFBVSxHQUFHO0lBQ3ZFRCxRQUFRZixVQUFVLElBQUtlLENBQUFBLFFBQVFmLFVBQVUsR0FBRztJQUM1QyxJQUFJUCxPQUFPVixhQUFhZ0MsUUFBUUMsVUFBVTtJQUMxQyxPQUFPbkIsYUFBYWtCLFFBQVFqQixTQUFTLEVBQUVMLE1BQU1NLFVBQVVnQixRQUFRZixVQUFVO0FBQzNFO0FBRUFZLHFCQUFxQixHQUFHLFNBQVNiLFFBQVEsRUFBRVEsY0FBYztJQUN2RCxJQUFJLENBQUNSLFlBQVksQ0FBQ1EsZ0JBQWdCLE9BQU87SUFDekNBLGlCQUFpQkQsdUJBQXVCQztJQUN4QyxJQUFJQyxRQUFRRCxlQUFlRSxLQUFLLENBQUM7SUFDakMsSUFBSUQsTUFBTTFCLE1BQU0sSUFBSSxHQUFHLE9BQU87SUFDOUIsSUFBSTtRQUNGLE9BQU9lLGFBQWFXLEtBQUssQ0FBQyxFQUFFLEVBQUVBLEtBQUssQ0FBQyxFQUFFLEVBQUVULFVBQVVTLEtBQUssQ0FBQyxFQUFFLEtBQUtEO0lBQ2pFLEVBQUUsT0FBT0YsR0FBRyxDQUFDO0lBQ2IsT0FBTztBQUNUO0FBRUFPLHVCQUF1QixHQUFHLFNBQVNiLFFBQVE7SUFDekMsSUFBSSxDQUFDQSxVQUFVLE9BQU87SUFDdEIsT0FBT0EsU0FBU1UsS0FBSyxDQUFDLEtBQUszQixNQUFNLElBQUk7QUFDdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9neW0tYXBwLWJlLy4vbm9kZV9tb2R1bGVzL3Bhc3N3b3JkLWhhc2gvbGliL3Bhc3N3b3JkLWhhc2guanM/MWM5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG5cbnZhciBzYWx0Q2hhcnMgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODknO1xudmFyIHNhbHRDaGFyc0NvdW50ID0gc2FsdENoYXJzLmxlbmd0aDtcblxuZnVuY3Rpb24gZ2VuZXJhdGVTYWx0KGxlbikge1xuICBpZiAodHlwZW9mIGxlbiAhPSAnbnVtYmVyJyB8fCBsZW4gPD0gMCB8fCBsZW4gIT09IHBhcnNlSW50KGxlbiwgMTApKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc2FsdCBsZW5ndGgnKTtcbiAgaWYgKGNyeXB0by5yYW5kb21CeXRlcykge1xuICAgIHJldHVybiBjcnlwdG8ucmFuZG9tQnl0ZXMoTWF0aC5jZWlsKGxlbiAvIDIpKS50b1N0cmluZygnaGV4Jykuc3Vic3RyaW5nKDAsIGxlbik7XG4gIH0gZWxzZSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIHNhbHQgPSAnJzsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBzYWx0ICs9IHNhbHRDaGFycy5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogc2FsdENoYXJzQ291bnQpKTtcbiAgICB9XG4gICAgcmV0dXJuIHNhbHQ7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVIYXNoKGFsZ29yaXRobSwgc2FsdCwgcGFzc3dvcmQsIGl0ZXJhdGlvbnMpIHtcbiAgaXRlcmF0aW9ucyA9IGl0ZXJhdGlvbnMgfHwgMTtcbiAgdHJ5IHtcbiAgICB2YXIgaGFzaCA9IHBhc3N3b3JkO1xuICAgIGZvcih2YXIgaT0wOyBpPGl0ZXJhdGlvbnM7ICsraSkge1xuICAgICAgaGFzaCA9IGNyeXB0by5jcmVhdGVIbWFjKGFsZ29yaXRobSwgc2FsdCkudXBkYXRlKGhhc2gpLmRpZ2VzdCgnaGV4Jyk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBhbGdvcml0aG0gKyAnJCcgKyBzYWx0ICsgJyQnICsgaXRlcmF0aW9ucyArICckJyArIGhhc2g7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgbWVzc2FnZSBkaWdlc3QgYWxnb3JpdGhtJyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbWFrZUJhY2t3YXJkQ29tcGF0aWJsZShoYXNoZWRQYXNzd29yZCkge1xuICB2YXIgcGFydHMgPSBoYXNoZWRQYXNzd29yZC5zcGxpdCgnJCcpO1xuICBpZihwYXJ0cy5sZW5ndGggPT09IDMpIHtcbiAgICBwYXJ0cy5zcGxpY2UoMiwwLDEpO1xuICAgIGhhc2hlZFBhc3N3b3JkID0gcGFydHMuam9pbihcIiRcIik7XG4gIH1cbiAgXG4gIHJldHVybiBoYXNoZWRQYXNzd29yZDtcbn1cblxubW9kdWxlLmV4cG9ydHMuZ2VuZXJhdGUgPSBmdW5jdGlvbihwYXNzd29yZCwgb3B0aW9ucykge1xuICBpZiAodHlwZW9mIHBhc3N3b3JkICE9ICdzdHJpbmcnKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcGFzc3dvcmQnKTtcbiAgb3B0aW9ucyB8fCAob3B0aW9ucyA9IHt9KTtcbiAgb3B0aW9ucy5hbGdvcml0aG0gfHwgKG9wdGlvbnMuYWxnb3JpdGhtID0gJ3NoYTEnKTtcbiAgb3B0aW9ucy5zYWx0TGVuZ3RoIHx8IG9wdGlvbnMuc2FsdExlbmd0aCA9PSAwIHx8IChvcHRpb25zLnNhbHRMZW5ndGggPSA4KTtcbiAgb3B0aW9ucy5pdGVyYXRpb25zIHx8IChvcHRpb25zLml0ZXJhdGlvbnMgPSAxKTtcbiAgdmFyIHNhbHQgPSBnZW5lcmF0ZVNhbHQob3B0aW9ucy5zYWx0TGVuZ3RoKTtcbiAgcmV0dXJuIGdlbmVyYXRlSGFzaChvcHRpb25zLmFsZ29yaXRobSwgc2FsdCwgcGFzc3dvcmQsIG9wdGlvbnMuaXRlcmF0aW9ucyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy52ZXJpZnkgPSBmdW5jdGlvbihwYXNzd29yZCwgaGFzaGVkUGFzc3dvcmQpIHtcbiAgaWYgKCFwYXNzd29yZCB8fCAhaGFzaGVkUGFzc3dvcmQpIHJldHVybiBmYWxzZTtcbiAgaGFzaGVkUGFzc3dvcmQgPSBtYWtlQmFja3dhcmRDb21wYXRpYmxlKGhhc2hlZFBhc3N3b3JkKTtcbiAgdmFyIHBhcnRzID0gaGFzaGVkUGFzc3dvcmQuc3BsaXQoJyQnKTtcbiAgaWYgKHBhcnRzLmxlbmd0aCAhPSA0KSByZXR1cm4gZmFsc2U7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGdlbmVyYXRlSGFzaChwYXJ0c1swXSwgcGFydHNbMV0sIHBhc3N3b3JkLCBwYXJ0c1syXSkgPT0gaGFzaGVkUGFzc3dvcmQ7XG4gIH0gY2F0Y2ggKGUpIHt9XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLmlzSGFzaGVkID0gZnVuY3Rpb24ocGFzc3dvcmQpIHtcbiAgaWYgKCFwYXNzd29yZCkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gcGFzc3dvcmQuc3BsaXQoJyQnKS5sZW5ndGggPT0gNDtcbn1cbiJdLCJuYW1lcyI6WyJjcnlwdG8iLCJyZXF1aXJlIiwic2FsdENoYXJzIiwic2FsdENoYXJzQ291bnQiLCJsZW5ndGgiLCJnZW5lcmF0ZVNhbHQiLCJsZW4iLCJwYXJzZUludCIsIkVycm9yIiwicmFuZG9tQnl0ZXMiLCJNYXRoIiwiY2VpbCIsInRvU3RyaW5nIiwic3Vic3RyaW5nIiwiaSIsInNhbHQiLCJjaGFyQXQiLCJmbG9vciIsInJhbmRvbSIsImdlbmVyYXRlSGFzaCIsImFsZ29yaXRobSIsInBhc3N3b3JkIiwiaXRlcmF0aW9ucyIsImhhc2giLCJjcmVhdGVIbWFjIiwidXBkYXRlIiwiZGlnZXN0IiwiZSIsIm1ha2VCYWNrd2FyZENvbXBhdGlibGUiLCJoYXNoZWRQYXNzd29yZCIsInBhcnRzIiwic3BsaXQiLCJzcGxpY2UiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyIsImdlbmVyYXRlIiwib3B0aW9ucyIsInNhbHRMZW5ndGgiLCJ2ZXJpZnkiLCJpc0hhc2hlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/password-hash/lib/password-hash.js\n");

/***/ })

};
;