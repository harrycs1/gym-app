// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model Exercises {
  exercise_id Int @id @default(autoincrement())
  name String
  type String
  muscle String
  equipment String
  difficulty String
  instructions String
  workouts ExercisesInWorkouts[]
  loggedWorkouts LoggedWorkouts[]
}
model Users {
  user_id Int @id @default(autoincrement())
  username String @unique
  password String
  image_url String? @default("https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png")
  workouts Workouts[]
  loggedWorkouts LoggedWorkouts[]
  comments Comments[]
  posts Posts[]
}
model Workouts {
  workout_id Int @id @default(autoincrement())
  workout_name String
  creator_id Int
  creator Users @relation(fields: [creator_id], references: [user_id])
  exercises ExercisesInWorkouts[]
  loggedWorkouts LoggedWorkouts[]
}
model ExercisesInWorkouts {
  exercise_id Int
  workout_id Int
  exercise Exercises @relation(fields: [exercise_id], references: [exercise_id])
  workout Workouts @relation(fields: [workout_id], references: [workout_id], onDelete: Cascade)
  @@id([exercise_id, workout_id])
}
model LoggedWorkouts {
    logged_id Int @id @default(autoincrement())
    session_id Int
    exercise_id Int
    workout_id Int
    user_id Int
    weight Int
    reps Int
    completed_at DateTime @default(now())
    exercise Exercises @relation(fields: [exercise_id], references: [exercise_id])
    workout Workouts @relation(fields: [workout_id], references: [workout_id], onDelete: Cascade)
    user Users @relation(fields: [user_id], references: [user_id])
}
model Posts {
  post_id Int @id @default(autoincrement())
  likes Int @default(0)
  session_name String
  description String
  session_id Int
  user_id Int
  completed_at DateTime @default(now())
  user Users @relation(fields: [user_id], references: [user_id])
  comments Comments[]
}
model Comments {
  comment_id Int @id @default(autoincrement())
  user_id Int
  post_id Int
  body String
  completed_at DateTime @default(now())
  user Users @relation(fields: [user_id], references: [user_id])
  posts Posts @relation(fields: [post_id], references: [post_id], onDelete: Cascade)
}